<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Aeon MQ 7 -->
	<!--##########################################################################   VISTA WALL - ID 56   ##########################################################################-->
	<include name="Wall_Dimmer">
		<animation effect="fade" start="100" end="50" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),50)">conditional</animation>
		<animation effect="fade" start="100" end="45" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),45)">conditional</animation>
		<animation effect="fade" start="100" end="40" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),40)">conditional</animation>
		<animation effect="fade" start="100" end="35" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),35)">conditional</animation>
		<animation effect="fade" start="100" end="30" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),30)">conditional</animation>
		<animation effect="fade" start="100" end="25" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),25)">conditional</animation>
		<animation effect="fade" start="100" end="20" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),20)">conditional</animation>
		<animation effect="fade" start="100" end="15" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),15)">conditional</animation>
		<animation effect="fade" start="100" end="10" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),10)">conditional</animation>
		<animation effect="fade" start="100" end="5" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),05)">conditional</animation>
		<animation effect="fade" start="100" end="0" time="300" condition="[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56) + String.Contains(skin.string(wallglass),00)">conditional</animation>
		<animation effect="fade" start="100" end="50" time="0" condition="String.Contains(skin.string(wallglass),50) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="45" time="0" condition="String.Contains(skin.string(wallglass),45) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="40" time="0" condition="String.Contains(skin.string(wallglass),40) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="35" time="0" condition="String.Contains(skin.string(wallglass),35) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="30" time="0" condition="String.Contains(skin.string(wallglass),30) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="25" time="0" condition="String.Contains(skin.string(wallglass),25) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="20" time="0" condition="String.Contains(skin.string(wallglass),20) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="15" time="0" condition="String.Contains(skin.string(wallglass),15) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="10" time="0" condition="String.Contains(skin.string(wallglass),10) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="05" time="0" condition="String.Contains(skin.string(wallglass),05) + Window.IsVisible(6636)">conditional</animation>
		<animation effect="fade" start="100" end="0" time="0" condition="String.Contains(skin.string(wallglass),00) + Window.IsVisible(6636)">conditional</animation>
	</include>
	<include name="Wall_Plot">
		<visible>[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + String.Contains(skin.string(wallvideopanel),auto) + Control.HasFocus(56)</visible>
	</include>
	<include name="Wall_ThumbDimmer">
		<left>0</left>
		<top>0</top>
		<texture>darkgrey.png</texture>
		<colordiffuse>$INFO[Skin.String(colortexture)]</colordiffuse>
		<animation effect="fade" start="100" end="45" condition="true">Conditional</animation>
		<include>Animation_Fade</include>
		<visible>[String.Contains(skin.string(panel_seconds),1) + System.IdleTime(1) | String.Contains(skin.string(panel_seconds),2) + System.IdleTime(2) | String.Contains(skin.string(panel_seconds),3) + System.IdleTime(3) | String.Contains(skin.string(panel_seconds),4) + System.IdleTime(4) | String.Contains(skin.string(panel_seconds),5) + System.IdleTime(5)] + Control.HasFocus(56)</visible>
	</include>
	<include name="Wall_VideoCaseNormal">
		<left>-9</left>
		<top>-8</top>
		<width>202</width>
		<height>296</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
	</include>
	<include name="Wall_VideoCaseNormalFocus">
		<left>-9</left>
		<top>-8</top>
		<width>202</width>
		<height>296</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
		<animation type="Focus" reversible="false">
			<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
			<effect type="fade" start="80" end="100" time="400" />
		</animation>
	</include>
	<include name="Wall_VideoCaseMed">
		<left>-9</left>
		<top>-15</top>
		<width>225</width>
		<height>308</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
	</include>
	<include name="Wall_VideoCaseMedFocus">
		<left>-9</left>
		<top>-15</top>
		<width>225</width>
		<height>308</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
		<animation type="Focus" reversible="false">
			<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
			<effect type="fade" start="80" end="100" time="400" />
		</animation>
	</include>
	<include name="Wall_VideoCaseMax">
		<left>12</left>
		<top>-22</top>
		<width>322</width>
		<height>462</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
	</include>
	<include name="Wall_VideoCaseMaxFocus">
		<left>12</left>
		<top>-22</top>
		<width>322</width>
		<height>462</height>
		<aspectratio align="center" aligny="bottom">stretch</aspectratio>
		<animation type="Focus" reversible="false">
			<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
			<effect type="fade" start="80" end="100" time="400" />
		</animation>
	</include>
	<include name="ViewWallVideo">
		<control type="group">
			<animation effect="fade" time="400">VisibleChange</animation>
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>0</left>
				<top>136</top>
				<width>2062</width>
				<height>830</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol>-</pagecontrol>
				<animation effect="slide" start="0,0" end="-93,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(12) + Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),default) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="-120,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(10) + !Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),default) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="-128,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(9) + String.Contains(skin.string(wallvideogrid),mid) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="-165,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(5) + String.Contains(skin.string(wallvideogrid),big) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<visible>![Container.Content(episodes) | Container.Content(sets) | Container.Content(years)]</visible>
				<itemlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)]  | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios) | Window.IsActive(videos)] + String.Contains(skin.string(wallvideogrid),default) + Skin.HasSetting(nowallvideocase)" width="148" height="207">
					<!-- POSTER SEM ESTOJO - tamanho normal -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>3</left>
							<top>3</top>
							<width>141</width>
							<height>201</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
							<bordertexture border="-2">black.png</bordertexture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<control type="multiimage">
                            <left>3</left>
                            <top>3</top>
                            <width>141</width>
                            <height>201</height>
                            <imagepath>http://localhost:52307/getthumb&amp;title=$INFO[ListItem.Label]IMDB</imagepath>
                            <aspectratio align="center">stretch</aspectratio>
                            <visible>Container.Content(directors)</visible>
                        </control>
						<control type="image">
							<left>100</left>
							<top>-5</top>
							<width>50</width>
							<height>50</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
						<control type="image">
							<left>110</left>
							<top>1</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios) | Window.IsActive(videos)] + String.Contains(skin.string(wallvideogrid),mid) + Skin.HasSetting(nowallvideocase)" width="192" height="276">
					<!-- POSTER SEM ESTOJO - tamanho medio -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>3</left>
							<top>3</top>
							<width>186</width>
							<height>262</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
							<bordertexture border="-2">black.png</bordertexture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<control type="multiimage">
                            <left>3</left>
                            <top>3</top>
                            <width>186</width>
                            <height>262</height>
                            <imagepath>http://localhost:52307/getthumb&amp;title=$INFO[ListItem.Label]IMDB</imagepath>
                            <aspectratio align="center">stretch</aspectratio>
                            <visible>Container.Content(directors)</visible>
                        </control>
						<control type="image">
							<left>140</left>
							<top>-7</top>
							<width>60</width>
							<height>60</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
						<control type="image">
							<left>156</left>
							<top>-2</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios) | Window.IsActive(videos)] + String.Contains(skin.string(wallvideogrid),big) + Skin.HasSetting(nowallvideocase)" width="315" height="414">
					<!-- POSTER SEM ESTOJO - tamanho grande -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>27</left>
							<top>3</top>
							<width>290</width>
							<height>408</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
							<bordertexture border="-2">black.png</bordertexture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<control type="multiimage">
                            <left>3</left>
                            <top>3</top>
                            <width>186</width>
                            <height>262</height>
                            <imagepath>http://localhost:52307/getthumb&amp;title=$INFO[ListItem.Label]IMDB</imagepath>
                            <aspectratio align="center">stretch</aspectratio>
                            <visible>Container.Content(directors)</visible>
                        </control>
						<control type="image">
							<left>260</left>
							<top>-7</top>
							<width>70</width>
							<height>70</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
						<control type="image">
							<left>270</left>
							<top>-2</top>
							<width>52</width>
							<height>52</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),default)" width="174" height="276">

				<!-- POSTER ESTOJO - tamanho normal -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>6</left>
							<top>32</top>
							<width>165</width>
							<height>234</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
							<aspectratio align="center">stretch</aspectratio>
						</control>	
						<!-- Estojo -->
						<!-- Bluray -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasebluray)]">$VAR[value_stylevideocase]</texture>
							<visible>[String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip)] + ![String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
						</control>
						<!-- Webtv -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasewebtv)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,web)</visible>	
						</control>	
						<!-- Hdtv -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasehdtv)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,hdtv)</visible>
						</control>
						<!-- Dvd -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasedvd)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.EndsWith(ListItem.Filenameandpath,.iso) + ![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)]</visible>	
						</control>
						<!-- 3d -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcase3dbd)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)</visible>	
						</control>
						<!-- Conjuntos -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcaseset)]">$VAR[value_stylevideocase]</texture>
							<visible>String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>	
						</control>
						<!-- 4k -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcase4k)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,4k)</visible>	
						</control>
						<!-- Por codec -->
						<control type="image">	
							<include>Wall_VideoCaseNormal</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasedefault)]">$VAR[value_stylevideocase]</texture>
							<visible>![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip) | String.Contains(ListItem.Filenameandpath,hdtv) | String.Contains(ListItem.Filenameandpath,web) | String.Contains(ListItem.Filenameandpath,dvd) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.EndsWith(ListItem.Filenameandpath,.iso) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.StartsWith(ListItem.Path,videodb://movies/sets) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
						</control>	
	                    <control type="image">
                            <!-- Estojo -->
                            <posx>-9</posx>
                            <posy>-8</posy>
                            <width>202</width>
                            <height>296</height>
                            <texture>$VAR[value_videocase0]</texture>
                            <aspectratio align="center" aligny="bottom">stretch</aspectratio>
                        </control>
  
						<control type="image">
							<!-- Codec -->
							<left>64</left>
							<top>-6</top>
							<width>51</width>
							<height>51</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>	
							<texture colordiffuse="$INFO[Skin.String(colorcodeccase)]">$VAR[value_videocodec0]</texture>
						</control>
						<control type="image">
							<left>125</left>
							<top>22</top>
							<width>50</width>
							<height>50</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
						<control type="image">
							<left>134</left>
							<top>30</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),mid)" width="191" height="278">
				

				<!-- POSTER ESTOJO - tamanho medio -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>7</left>
							<top>26</top>
							<width>186</width>
							<height>243</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
							<aspectratio align="center" aligny="top">stretch</aspectratio>
						</control>
						<!-- Estojo -->
						<!-- Bluray -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasebluray)]">$VAR[value_stylevideocase]</texture>
							<visible>[String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip)] + ![String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
						</control>
						<!-- Webtv -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasewebtv)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,web)</visible>	
						</control>	
						<!-- Hdtv -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasehdtv)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,hdtv)</visible>
						</control>
						<!-- Dvd -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasedvd)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.EndsWith(ListItem.Filenameandpath,.iso) + ![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)]</visible>	
						</control>
						<!-- 3d -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcase3dbd)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)</visible>	
						</control>
						<!-- Conjuntos -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcaseset)]">$VAR[value_stylevideocase]</texture>
							<visible>String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>	
						</control>
						<!-- 4k -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcase4k)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,4k)</visible>	
						</control>
						<!-- Por codec -->
						<control type="image">	
							<include>Wall_VideoCaseMed</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasedefault)]">$VAR[value_stylevideocase]</texture>
							<visible>![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip) | String.Contains(ListItem.Filenameandpath,hdtv) | String.Contains(ListItem.Filenameandpath,web) | String.Contains(ListItem.Filenameandpath,dvd) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.EndsWith(ListItem.Filenameandpath,.iso) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.StartsWith(ListItem.Path,videodb://movies/sets) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
						</control>	
						<!-- Codec -->
						<control type="image">	
							<left>75</left>
							<top>-12</top>
							<width>51</width>
							<height>51</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>	
							<texture colordiffuse="$INFO[Skin.String(colorcodeccase)]">$VAR[value_videocodec0]</texture>
						</control>
						<control type="image">
							<left>140</left>
							<top>17</top>
							<width>60</width>
							<height>60</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
						<control type="image">
							<left>152</left>
							<top>26</top>
							<width>38</width>
							<height>38</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<itemlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),big)" width="315" height="417">
					<!-- POSTER ESTOJO - tamanho grande -->
					<control type="group">
						<include>Wall_Dimmer</include>
						<control type="image">
							<left>36</left>
							<top>38</top>
							<width>262</width>
							<height>366</height>
							<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
							<aspectratio align="center">stretch</aspectratio>
						</control>
						<!-- Estojo -->
						<!-- Bluray -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasebluray)]">$VAR[value_stylevideocase]</texture>
							<visible>[String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip)] + ![String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
						</control>
						<!-- Webtv -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasewebtv)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,web)</visible>	
						</control>	
						<!-- Hdtv -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasehdtv)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,hdtv)</visible>
						</control>
						<!-- Dvd -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasedvd)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.EndsWith(ListItem.Filenameandpath,.iso) + ![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)]</visible>	
						</control>
						<!-- 3d -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcase3dbd)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)</visible>	
						</control>
						<!-- Conjuntos -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcaseset)]">$VAR[value_stylevideocase]</texture>
							<visible>String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>	
						</control>
						<!-- 4k -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcase4k)]">$VAR[value_stylevideocase]</texture>
							<visible>String.Contains(ListItem.Filenameandpath,4k)</visible>	
						</control>
						<!-- Por codec -->
						<control type="image">	
							<include>Wall_VideoCaseMax</include>
							<texture colordiffuse="$INFO[Skin.String(colorcasedefault)]">$VAR[value_stylevideocase]</texture>
							<visible>![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip) | String.Contains(ListItem.Filenameandpath,hdtv) | String.Contains(ListItem.Filenameandpath,web) | String.Contains(ListItem.Filenameandpath,dvd) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.EndsWith(ListItem.Filenameandpath,.iso) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.StartsWith(ListItem.Path,videodb://movies/sets) | String.Contains(ListItem.Filenameandpath,4k)]</visible>	
						</control>	
						<!-- Codec -->
						<control type="image">	
							<left>132</left>
							<top>-18</top>
							<width>75</width>
							<height>75</height>
							<aspectratio align="center" aligny="center">keep</aspectratio>	
							<texture colordiffuse="$INFO[Skin.String(colorcodeccase)]">$VAR[value_videocodec0]</texture>
						</control>
						<control type="image">
							<left>235</left>
							<top>25</top>
							<width>70</width>
							<height>70</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
						<control type="image">
							<left>244</left>
							<top>36</top>
							<width>52</width>
							<height>52</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
							<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
						</control>
					</control>
				</itemlayout>
				<focusedlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios) | Window.IsActive(videos)] + String.Contains(skin.string(wallvideogrid),default) + Skin.HasSetting(nowallvideocase)" width="148" height="207">
					<!-- POSTER SEM ESTOJO - tamanho normal -->
					<control type="group">
						<!-- CDART VIDEO -->
						<animation type="WindowOpen">
							<effect type="slide" start="-63,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation type="Focus">
							<effect type="slide" start="-63,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
						<animation type="Unfocus">
							<effect type="slide" start="0,0" end="-63,0" time="300" tween="cubic" easing="out" />
							<effect type="fade" start="100" end="0" time="200" />
						</animation>
						<visible>![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)] + Window.IsActive(25)</visible>
						<control type="image">
							<left>63</left>
							<top>15</top>
							<width>165</width>
							<height>165</height>
							<texture diffuse="cdart_diffuse.png" background="true">$INFO[ListItem.Art(discart)]</texture>
							<fadetime>FanartCrossFadeTime</fadetime>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<animation effect="rotate" start="0" end="-360" center="auto" time="40000" delay="5000" loop="true" reversible="false" condition="!Player.HasVideo">Conditional</animation>
							<include>Animation_ViewsCDart</include>
						</control>
					</control>
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>141</width>
						<height>201</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
						<control type="image">
							<left>100</left>
							<top>-5</top>
							<width>50</width>
							<height>50</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<animation type="Focus" reversible="false">
								<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
								<effect type="fade" start="80" end="100" time="400" />
							</animation>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
					<control type="image">
						<left>110</left>
						<top>1</top>
						<width>38</width>
						<height>38</height>
						<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios) | Window.IsActive(videos)] + String.Contains(skin.string(wallvideogrid),mid) + Skin.HasSetting(nowallvideocase)" width="192" height="276">
					<!-- POSTER SEM ESTOJO - tamanho medio -->
					<control type="group">
						<!-- CDART VIDEO -->
						<animation type="WindowOpen">
							<effect type="slide" start="-81,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation type="Focus">
							<effect type="slide" start="-81,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
						<animation type="Unfocus">
							<effect type="slide" start="0,0" end="-81,0" time="300" tween="cubic" easing="out" />
							<effect type="fade" start="100" end="0" time="200" />
						</animation>
						<visible>![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)] + Window.IsActive(25)</visible>
						<control type="image">
							<left>81</left>
							<top>15</top>
							<width>218</width>
							<height>218</height>
							<texture diffuse="cdart_diffuse.png" background="true">$INFO[ListItem.Art(discart)]</texture>
							<fadetime>FanartCrossFadeTime</fadetime>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<animation effect="rotate" start="0" end="-360" center="auto" time="40000" delay="5000" loop="true" reversible="false" condition="!Player.HasVideo">Conditional</animation>
							<include>Animation_ViewsCDart</include>
						</control>
					</control>
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>186</width>
						<height>262</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
						<control type="image">
							<left>140</left>
							<top>-7</top>
							<width>60</width>
							<height>60</height>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
					<control type="image">
						<left>158</left>
						<top>-3</top>
						<width>38</width>
						<height>38</height>
						<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[[Container.Content(movies) | Container.Content(musicvideos)] | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(genres) | Container.Content(countries) | Container.Content(studios) | Window.IsActive(videos)] + String.Contains(skin.string(wallvideogrid),big) + Skin.HasSetting(nowallvideocase)" width="315" height="414">
					<!-- POSTER SEM ESTOJO - tamanho grande -->
					<control type="group">
						<!-- CDART VIDEO -->
						<animation type="WindowOpen">
							<effect type="slide" start="-140,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation type="Focus">
							<effect type="slide" start="-140,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
						<animation type="Unfocus">
							<effect type="slide" start="0,0" end="-140,0" time="300" tween="cubic" easing="out" />
							<effect type="fade" start="100" end="0" time="200" />
						</animation>
						<visible>![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)] + Window.IsActive(25)</visible>
						<control type="image">
							<left>140</left>
							<top>30</top>
							<width>345</width>
							<height>345</height>
							<texture diffuse="cdart_diffuse.png" background="true">$INFO[ListItem.Art(discart)]</texture>
							<fadetime>FanartCrossFadeTime</fadetime>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<animation effect="rotate" start="0" end="-360" center="auto" time="40000" delay="5000" loop="true" reversible="false" condition="!Player.HasVideo">Conditional</animation>
							<include>Animation_ViewsCDart</include>
						</control>
					</control>
					<control type="image">
						<left>27</left>
						<top>3</top>
						<width>290</width>
						<height>408</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
						<control type="image">
							<left>260</left>
							<top>-7</top>
							<width>70</width>
							<height>70</height>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
					<control type="image">
						<left>270</left>
						<top>-2</top>
						<width>52</width>
						<height>52</height>
						<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,90" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),default)" width="174" height="276">
					<!-- POSTER ESTOJO - tamanho normal -->
					<control type="group">
						<!-- CDART VIDEO -->
						<animation type="WindowOpen">
							<effect type="slide" start="-56,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation type="Focus">
							<effect type="slide" start="-56,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
						<animation type="Unfocus">
							<effect type="slide" start="0,0" end="-56,0" time="300" tween="cubic" easing="out" />
							<effect type="fade" start="100" end="0" time="200" />
						</animation>
						<visible>![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)] + Window.IsActive(25)</visible>
						<control type="image">
							<left>56</left>
							<top>18</top>
							<width>225</width>
							<height>225</height>
							<texture diffuse="cdart_diffuse.png" background="true">$INFO[ListItem.Art(discart)]</texture>
							<fadetime>FanartCrossFadeTime</fadetime>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<animation effect="rotate" start="0" end="-360" center="auto" time="40000" delay="5000" loop="true" reversible="false" condition="!Player.HasVideo">Conditional</animation>
							<include>Animation_ViewsCDart</include>
						</control>
					</control>
					<control type="image">
						<left>6</left>
						<top>32</top>
						<width>165</width>
						<height>234</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
					<!-- Estojo -->
					<!-- Bluray -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasebluray)]">$VAR[value_stylevideocase]</texture>
						<visible>[String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip)] + ![String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
					</control>
					<!-- Webtv -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasewebtv)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,web)</visible>	
					</control>	
					<!-- Hdtv -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasehdtv)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,hdtv)</visible>
					</control>
					<!-- Dvd -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasedvd)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.EndsWith(ListItem.Filenameandpath,.iso) + ![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)]</visible>	
					</control>
					<!-- 3d -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcase3dbd)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)</visible>	
					</control>
					<!-- Conjuntos -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcaseset)]">$VAR[value_stylevideocase]</texture>
						<visible>String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>	
					</control>
					<!-- 4k -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcase4k)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,4k)</visible>	
					</control>
					<!-- Por codec -->
					<control type="image">	
						<include>Wall_VideoCaseNormalFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasedefault)]">$VAR[value_stylevideocase]</texture>
						<visible>![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip) | String.Contains(ListItem.Filenameandpath,hdtv) | String.Contains(ListItem.Filenameandpath,web) | String.Contains(ListItem.Filenameandpath,dvd) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.EndsWith(ListItem.Filenameandpath,.iso) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.StartsWith(ListItem.Path,videodb://movies/sets) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
					</control>	
					<!-- Codec -->
					<control type="image">	
						<left>64</left>
						<top>-6</top>
						<width>51</width>
						<height>51</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>	
						<texture colordiffuse="$INFO[Skin.String(colorcodeccase)]">$VAR[value_videocodec0]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,135" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
						<control type="image">
							<left>125</left>
							<top>22</top>
							<width>50</width>
							<height>50</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="105,105" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
					<control type="image">
						<left>134</left>
						<top>30</top>
						<width>38</width>
						<height>38</height>
						<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="105,105" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),mid)" width="191" height="278">
					<!-- POSTER ESTOJO - tamanho medio -->
					<control type="group">
						<!-- CDART VIDEO -->
						<animation type="WindowOpen">
							<effect type="slide" start="-68,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation type="Focus">
							<effect type="slide" start="-68,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
						<animation type="Unfocus">
							<effect type="slide" start="0,0" end="-68,0" time="300" tween="cubic" easing="out" />
							<effect type="fade" start="100" end="0" time="200" />
						</animation>
						<visible>![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)] + Window.IsActive(25)</visible>
						<control type="image">
							<left>68</left>
							<top>12</top>
							<width>240</width>
							<height>240</height>
							<texture diffuse="cdart_diffuse.png" background="true">$INFO[ListItem.Art(discart)]</texture>
							<fadetime>FanartCrossFadeTime</fadetime>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<animation effect="rotate" start="0" end="-360" center="auto" time="40000" delay="5000" loop="true" reversible="false" condition="!Player.HasVideo">Conditional</animation>
							<include>Animation_ViewsCDart</include>
						</control>
					</control>
					<control type="image">
						<left>7</left>
						<top>26</top>
						<width>186</width>
						<height>243</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<aspectratio align="center" aligny="top">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
					<!-- Estojo -->
					<!-- Bluray -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasebluray)]">$VAR[value_stylevideocase]</texture>
						<visible>[String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip)] + ![String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
					</control>
					<!-- Webtv -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasewebtv)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,web)</visible>	
					</control>	
					<!-- Hdtv -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasehdtv)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,hdtv)</visible>
					</control>
					<!-- Dvd -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasedvd)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.EndsWith(ListItem.Filenameandpath,.iso) + ![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)]</visible>	
					</control>
					<!-- 3d -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcase3dbd)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)</visible>	
					</control>
					<!-- Conjuntos -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcaseset)]">$VAR[value_stylevideocase]</texture>
						<visible>String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>	
					</control>
					<!-- 4k -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcase4k)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,4k)</visible>	
					</control>
					<!-- Por codec -->
					<control type="image">	
						<include>Wall_VideoCaseMedFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasedefault)]">$VAR[value_stylevideocase]</texture>
						<visible>![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip) | String.Contains(ListItem.Filenameandpath,hdtv) | String.Contains(ListItem.Filenameandpath,web) | String.Contains(ListItem.Filenameandpath,dvd) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.EndsWith(ListItem.Filenameandpath,.iso) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.StartsWith(ListItem.Path,videodb://movies/sets) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
					</control>
					<control type="image">
						<!-- Codec -->
						<left>75</left>
						<top>-12</top>
						<width>51</width>
						<height>51</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>	
						<texture colordiffuse="$INFO[Skin.String(colorcodeccase)]">$VAR[value_videocodec0]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,135" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
						<control type="image">
							<left>140</left>
							<top>17</top>
							<width>60</width>
							<height>60</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="105,105" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
					<control type="image">
						<left>152</left>
						<top>26</top>
						<width>38</width>
						<height>38</height>
						<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="105,105" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
				<focusedlayout condition="[Container.Content(movies) | Container.Content(musicvideos)] + !Skin.HasSetting(nowallvideocase) + String.Contains(skin.string(wallvideogrid),big)" width="315" height="414">
					<!-- POSTER ESTOJO - tamanho grande -->
					<control type="group">
						<!-- CDART VIDEO -->
						<animation type="WindowOpen">
							<effect type="slide" start="-114,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation type="Focus">
							<effect type="slide" start="-114,0" end="0,0" time="500" delay="500" tween="cubic" easing="out" />
							<effect type="fade" start="0" end="100" time="500" delay="500" />
						</animation>
						<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
						<animation type="Unfocus">
							<effect type="slide" start="0,0" end="-114,0" time="300" tween="cubic" easing="out" />
							<effect type="fade" start="100" end="0" time="200" />
						</animation>
						<visible>![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)] + Window.IsActive(25)</visible>
						<control type="image">
							<left>114</left>
							<top>20</top>
							<width>360</width>
							<height>360</height>
							<texture diffuse="cdart_diffuse.png" background="true">$INFO[ListItem.Art(discart)]</texture>
							<fadetime>FanartCrossFadeTime</fadetime>
							<aspectratio align="center" aligny="center">keep</aspectratio>
							<animation effect="rotate" start="0" end="-360" center="auto" time="40000" delay="5000" loop="true" reversible="false" condition="!Player.HasVideo">Conditional</animation>
							<include>Animation_ViewsCDart</include>
						</control>
					</control>
					<control type="image">
						<left>36</left>
						<top>38</top>
						<width>262</width>
						<height>366</height>
						<texture fallback="DefaultVideoPoster.png" background="true">$VAR[value_poster]</texture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
					<!-- Estojo -->
					<!-- Bluray -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasebluray)]">$VAR[value_stylevideocase]</texture>
						<visible>[String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip)] + ![String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.Contains(ListItem.Filenameandpath,4k)]</visible>
					</control>
					<!-- Webtv -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasewebtv)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,web)</visible>	
					</control>	
					<!-- Hdtv -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasehdtv)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,hdtv)</visible>
					</control>
					<!-- Dvd -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasedvd)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,dvd) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.EndsWith(ListItem.Filenameandpath,.iso) + ![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)]</visible>	
					</control>
					<!-- 3d -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcase3dbd)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.)</visible>	
					</control>
					<!-- Conjuntos -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcaseset)]">$VAR[value_stylevideocase]</texture>
						<visible>String.StartsWith(ListItem.Path,videodb://movies/sets)</visible>	
					</control>
					<!-- 4k -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcase4k)]">$VAR[value_stylevideocase]</texture>
						<visible>String.Contains(ListItem.Filenameandpath,4k)</visible>	
					</control>
					<!-- Por codec -->
					<control type="image">	
						<include>Wall_VideoCaseMaxFocus</include>
						<texture colordiffuse="$INFO[Skin.String(colorcasedefault)]">$VAR[value_stylevideocase]</texture>
						<visible>![String.Contains(ListItem.Filenameandpath,bluray) | String.Contains(ListItem.Filenameandpath,blu-ray) | String.Contains(ListItem.Filenameandpath,bdrip) | String.Contains(ListItem.Filenameandpath,hdtv) | String.Contains(ListItem.Filenameandpath,web) | String.Contains(ListItem.Filenameandpath,dvd) | String.Contains(ListItem.Filenameandpath,.3dbd.) | String.Contains(ListItem.Filenameandpath,.3d.) | String.EndsWith(ListItem.Filenameandpath,.iso) | String.EndsWith(ListItem.Filenameandpath,.ifo) | String.StartsWith(ListItem.Path,videodb://movies/sets) | String.Contains(ListItem.Filenameandpath,4k)]</visible>	
					</control>
					<control type="image">
						<!-- Codec -->
						<left>132</left>
						<top>-18</top>
						<width>75</width>
						<height>75</height>
						<aspectratio align="center" aligny="center">keep</aspectratio>	
						<texture colordiffuse="$INFO[Skin.String(colorcodeccase)]">$VAR[value_videocodec0]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="90,165" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
						<control type="image">
							<left>235</left>
							<top>25</top>
							<width>70</width>
							<height>70</height>
							<texture colordiffuse="$INFO[Skin.String(colorwatched)]">circle/$INFO[ListItem.PercentPlayed,,.png]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="105,105" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
							<visible>[Integer.IsGreater(ListItem.PercentPlayed,0) + Skin.HasSetting(progress_info)] + ![!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)]</visible>
						</control>
					<control type="image">
						<left>244</left>
						<top>36</top>
						<width>52</width>
						<height>52</height>
						<texture colordiffuse="$INFO[Skin.String(colorwatched)]">$VAR[value_watchedstyle]</texture>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="105,105" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
						<visible>!Skin.HasSetting(nooverlays) + String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
					</control>
				</focusedlayout>
			</control>
			<control type="group">
				<!-- plot tamanho normal sem estojo -->
				<animation effect="slide" start="0,0" end="-98,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(12) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="80,0" time="500" delay="500" tween="cubic" easing="out" condition="[Container(56).Column(0) | Container(56).Column(1) | Container(56).Column(2) | Container(56).Column(3) | Container(56).Column(4) | Container(56).Column(5) | Container(56).Column(6)] + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="165,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="312,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="460,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="608,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="756,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="903,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1052,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="270,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="417,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="564,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="712,0" time="0" condition="Container(56).Column(10)">Conditional</animation>
				<animation effect="slide" start="0,0" end="861,0" time="0" condition="Container(56).Column(11)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1008,0" time="0" condition="Container(56).Column(12)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,128" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,334" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,542" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,748" time="0" condition="Container(56).Row(3)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>[String.Contains(skin.string(wallvideogrid),default) + Skin.HasSetting(nowallvideocase) + !String.IsEqual(ListItem.Label,..)] + [Container.Content(movies) | Container.Content(musicvideos)] | String.Contains(skin.string(wallvideogrid),default) + !String.IsEqual(ListItem.Label,..) + ![Container.Content(movies) | Container.Content(musicvideos)]</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>750</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[Skin.String(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>750</width>
					<height>22</height>
					<textcolor>FFFFFAF0</textcolor>
					<label>$VAR[value_glasslistinfofocus]</label>
					<font>Font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>750</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>750</width>
					<height>170</height>
					<label>$VAR[value_plot]</label>
					<font>Font_plot</font>
					<autoscroll delay="10000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
			<control type="group">
				<!-- plot tamanho normal com estojo -->
				<animation effect="slide" start="0,0" end="-120,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(10) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="98,0" time="500" delay="500" tween="cubic" easing="out" condition="[Container(56).Column(0) | Container(56).Column(1) | Container(56).Column(2) | Container(56).Column(3) | Container(56).Column(4) | Container(56).Column(5)] + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="195,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="369,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="543,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="717,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="891,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1065,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="352,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="526,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="700,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="874,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="1048,0" time="0" condition="Container(56).Column(10)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,135" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,411" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,687" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>String.Contains(skin.string(wallvideogrid),default) + ![Skin.HasSetting(nowallvideocase) | String.IsEqual(ListItem.Label,..)] + [Container.Content(movies) | Container.Content(musicvideos)]</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>675</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[Skin.String(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>675</width>
					<height>22</height>
					<textcolor>FFFFFAF0</textcolor>
					<label>$VAR[value_glasslistinfofocus]</label>
					<font>Font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>675</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>675</width>
					<height>234</height>
					<label>$VAR[value_plot]</label>
					<font>Font_plot</font>
					<autoscroll delay="10000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
			<control type="group">
				<!-- plot tamanho medio -->
				<animation effect="slide" start="0,0" end="-128,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(9) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="112,0" time="500" delay="500" tween="cubic" easing="out" condition="[Container(56).Column(0) | Container(56).Column(1) | Container(56).Column(2) | Container(56).Column(3) | Container(56).Column(4)] + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="210,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="402,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="594,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="786,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="978,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="188,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="380,0" time="0" condition="Container(56).Column(6)">Conditional</animation>
				<animation effect="slide" start="0,0" end="572,0" time="0" condition="Container(56).Column(7)">Conditional</animation>
				<animation effect="slide" start="0,0" end="764,0" time="0" condition="Container(56).Column(8)">Conditional</animation>
				<animation effect="slide" start="0,0" end="956,0" time="0" condition="Container(56).Column(9)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,130" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,406" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,682" time="0" condition="Container(56).Row(2)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>String.Contains(skin.string(wallvideogrid),mid) + !String.IsEqual(ListItem.Label,..)</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>750</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[Skin.String(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>750</width>
					<height>22</height>
					<textcolor>FFFFFAF0</textcolor>
					<label>$VAR[value_glasslistinfofocus]</label>
					<font>Font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>750</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>750</width>
					<height>234</height>
					<label>$VAR[value_plot]</label>
					<font>Font_plot</font>
					<autoscroll delay="8000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
			<control type="group">
				<!-- plot tamanho grande -->
				<animation effect="slide" start="0,0" end="-165,0" time="500" delay="500" tween="cubic" easing="out" condition="Container(56).Column(5) + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="165,0" time="500" delay="500" tween="cubic" easing="out" condition="[Container(56).Column(0) | Container(56).Column(1) | Container(56).Column(2)] + Window.IsActive(25) + ![String.IsEmpty(ListItem.Art(discart)) | Skin.HasSetting(nowalldiscart) | String.StartsWith(ListItem.Path,videodb://movies/sets)]">Conditional</animation>
				<animation effect="slide" start="0,0" end="338,0" time="0" condition="Container(56).Column(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="652,0" time="0" condition="Container(56).Column(1)">Conditional</animation>
				<animation effect="slide" start="0,0" end="968,0" time="0" condition="Container(56).Column(2)">Conditional</animation>
				<animation effect="slide" start="0,0" end="255,0" time="0" condition="Container(56).Column(3)">Conditional</animation>
				<animation effect="slide" start="0,0" end="570,0" time="0" condition="Container(56).Column(4)">Conditional</animation>
				<animation effect="slide" start="0,0" end="885,0" time="0" condition="Container(56).Column(5)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,128" time="0" condition="Container(56).Row(0)">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,542" time="0" condition="Container(56).Row(1)">Conditional</animation>
				<include>Wall_Plot</include>
				<visible>String.Contains(skin.string(wallvideogrid),big) + !String.IsEqual(ListItem.Label,..)</visible>
				<control type="image">
					<left>0</left>
					<top>8</top>
					<width>690</width>
					<height>38</height>
					<texture>gradient_focus.png</texture>
					<colordiffuse>$INFO[Skin.String(colorheader)]</colordiffuse>
				</control>
				<control type="label">
					<left>0</left>
					<top>0</top>
					<width>690</width>
					<height>22</height>
					<textcolor>FFFFFAF0</textcolor>
					<label>$VAR[value_glasslistinfofocus]</label>
					<font>Font_plot</font>
					<scroll>true</scroll>
					<visible>!String.IsEqual(ListItem.Label,..)</visible>
				</control>
				<control type="image">
					<left>0</left>
					<top>38</top>
					<width>690</width>
					<height>3</height>
					<align>left</align>
					<texture flipx="true">divider.png</texture>
				</control>
				<control type="textbox">
					<left>0</left>
					<top>45</top>
					<width>690</width>
					<height>363</height>
					<label>$VAR[value_plot]</label>
					<font>Font_plot</font>
					<autoscroll delay="8000" time="4000" repeat="8000">!Skin.HasSetting(noallowscroll)</autoscroll>
				</control>
			</control>
		</control>
	</include>
	<include name="ViewWallAudio">
		<control type="group">
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
		    <!-- añadido para panel -->	
			<control type="label">
				<posx>300</posx>
				<posy>23</posy>
				<width>1590</width>
				<height>35</height>
				<font>Font_title</font>
				<scroll>true</scroll>
				<label>$INFO[ListItem.Label]</label>
                <visible>String.Contains(Container.FolderPath,musicdb://genres/,right ) | String.Contains(Container.FolderPath,plugin://,left )</visible>
			</control>
		    <!-- Panel de caratulas -->
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>30</left>
				<top>100</top>
				<width>1920</width>
				<height>935</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol>-</pagecontrol>
				<visible>Window.IsActive(500) | Window.IsActive(501) | Window.IsActive(502)</visible>
				
				<itemlayout condition="String.Contains(skin.string(wallmusicgrid),default)" width="190" height="190">		<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">stretch</aspectratio>
						<visible> Skin.HasSetting(no_cd_wall)</visible>
					</control>
                    <control type="group">                    <!--Grupo de CD y imagenes-->
                         <visible> !Skin.HasSetting(no_cd_wall)</visible>
                        <control type="image">                        <!-- Caratula de CD-->
<!--                            <left>27</left>-->
                            <left>17</left>
                            <top>8</top>
                            <width>138</width>
                            <height>140</height>
                            <texture fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                            <aspectratio align="center">stretch</aspectratio>
                        </control>
                        <control type="image">                        <!-- Caja de CD -->
<!--                            <left>3</left>-->
                            <left>-7</left>							
                            <top>3</top>
                            <width>171</width>
                            <height>156</height>
                            <texture background="true">cd_box_closed-000.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
                         </control>
                        <control type="image">                        <!-- Fondo de etiqueta -->
<!--                            <left>9</left>-->
                            <left>-1</left>
                            <top>20</top>
                            <width>17</width>
                            <height>117</height>
                            <texture background="true">cd_etykieta.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
                        </control>
                        <control type="label">                        <!-- Nombre del CD -->
<!--                            <left>6</left>-->
                            <left>-3</left>
                            <top>140</top>
                            <width>108</width>
                            <height>11</height>
                            <font>Font10</font>
                            <angle>90</angle>
                            <include>listcolor</include>
							<label>$INFO[ListItem.Label]                                                                    </label>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
    					</control>
                    </control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallmusicgrid),mid)" width="315" height="300">			<!-- Tamaño medio -->	
					<control type="image">  					<!-- Poster sin CD-->
                        <visible> Skin.HasSetting(no_cd_wall)</visible>
						<left>-7</left>
						<top>0</top>
						<width>300</width>
						<height>300</height>
						<texture diffuse="thumb_box_diffuse.png" fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
						<aspectratio align="center">stretch</aspectratio>
                         <animation effect="fade" start="100" end="60" time="200" condition="true">Conditional</animation>
					</control>
                   <control type="group">                    <!--Grupo de CD y imagenes-->
                        <visible> !Skin.HasSetting(no_cd_wall)</visible>
                        <control type="image">                        <!-- Caratula de CD-->
                            <left>30</left>
                            <top>15</top>
                            <width>258</width>
                            <height>254</height>
                            <texture diffuse="thumb_box_diffuse.png" fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                            <aspectratio align="center">stretch</aspectratio>
                        </control>
                        <control type="image">                        <!-- Caja de CD -->
                            <left>-10</left>
                            <top>3</top>
							<width>310</width>
                            <height>283</height> 
							<texture background="true">cd_box_closed-000.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
                        </control>
                        <control type="image">                        <!-- Fondo de etiqueta -->
                            <left>2</left>
                            <top>32</top>
                            <width>31</width>
                            <height>218</height>
                            <texture background="true">cd_etykieta.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
                        </control>
                        <control type="label">                        <!-- Nombre del CD -->
                            <left>4</left>
                            <top>240</top>
                            <width>205</width>
                            <height>30</height>
                            <font>Font_headersmall</font>
                            <angle>90</angle>
                            <include>listcolor</include>
							<label>$INFO[ListItem.Label]                                                                    </label>
							<scroll>false</scroll>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
                        </control>
                    </control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallmusicgrid),big)" width="470" height="470">			<!-- Tamaño grande -->	
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture diffuse="thumb_box_diffuse.png" fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
<!--						<bordertexture border="-2">black.png</bordertexture>  -->
						<aspectratio align="center">stretch</aspectratio>
						<animation effect="fade" start="100" end="70" time="200" condition="true">Conditional</animation>
						<visible> Skin.HasSetting(no_cd_wall)</visible>
					</control>
                    <control type="group">                    <!--Grupo de CD y imagenes-->
                         <visible> !Skin.HasSetting(no_cd_wall)</visible>
                        <control type="image">                        <!-- Caratula de CD-->
                            <left>37</left>
                            <top>8</top>
                            <width>380</width>
                            <height>400</height>
                            <texture fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                            <aspectratio align="center">stretch</aspectratio>
                        </control>
                        <control type="image">                        <!-- Caja de CD -->
                            <left>-20</left>							
                            <top>-15</top>
                            <width>460</width>
                            <height>460</height>
                            <texture background="true">cd_box_closed-000.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
                         </control>
                        <control type="image">                        <!-- Fondo de etiqueta -->
<!--                            <left>9</left>-->
                            <left>4</left>
                            <top>35</top>
                            <width>30</width>
                            <height>347</height>
                            <texture background="true">cd_etykieta.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
                        </control>
                        <control type="label">                        <!-- Nombre del CD -->
<!--                            <left>6</left>-->
                            <left>4</left>
                            <top>370</top>
                            <width>330</width>
                            <height>30</height>
                            <font>Font_headersmall</font>
                            <angle>90</angle>
                            <include>listcolor</include>
							<label>$INFO[ListItem.Label]                                                                    </label>
							<scroll>false</scroll>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
    					</control>
                    </control>
				</itemlayout>

				<focusedlayout condition="String.Contains(skin.string(wallmusicgrid),default)" width="190" height="190">		<!-- Foco tamanho normal -->
					<control type="group">
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="130" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
                        <control type="group">					<!-- Grupo Sin CD -->  
                            <visible> Skin.HasSetting(no_cd_wall)</visible>
                            <control type="image">              <!-- Fondo Gris Sin CD -->
<!--                                <left>3</left>-->
                                <left>3</left>
                                <top>3</top>
                                <width>154</width>
                                <height>154</height>
                                <texture border="-2" background="true">grey.png</texture>
                                <colordiffuse>99ffffff</colordiffuse>
                                <aspectratio align="center">stretch</aspectratio>
                            </control>
                            <control type="image">              <!-- Imagen Sin CD -->
<!--                                <left>7</left>-->
                                <left>7</left>
                                <top>7</top>
                                <width>145</width>
                                <height>145</height>
                                <texture fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                                <aspectratio align="center">stretch</aspectratio>
                            </control>
                        </control>
						<control type="group">                    <!--Grupo de CD y imagenes-->
                        <visible> !Skin.HasSetting(no_cd_wall)</visible>
							<control type="image">                        <!-- Caratula de CD-->
<!--								<left>27</left>-->
								<left>17</left>
								<top>8</top>
								<width>138</width>
								<height>140</height>
                                <texture fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                                <aspectratio align="center">stretch</aspectratio>
                            </control>
							<control type="image">                        <!-- Caja de CD -->
<!--								<left>3</left>-->
								<left>-7</left>
								<top>3</top>
								<width>171</width>
								<height>156</height>
								<texture background="true">cd_box_closed-000.png</texture>
                                <aspectratio align="center">stretch</aspectratio>
                            </control>
							<control type="image">                        <!-- Fondo de etiqueta -->
<!--								<left>10</left>-->
								<left>0</left>
								<top>20</top>
								<width>17</width>
								<height>118</height>
								<texture background="true">cd_etykieta.png</texture>
								<aspectratio align="center">stretch</aspectratio>
                                <colordiffuse>$VAR[value_headercolor]</colordiffuse>
								<visible> !Skin.HasSetting(no_cd_titles)</visible>
                            </control>
							<control type="label">                        <!-- Nombre del CD -->
<!--								<left>7</left>-->
								<left>-3</left>
								<top>140</top>
								<width>108</width>
								<height>11</height>
								<font>Font11</font>
								<angle>90</angle>
								<include>listcolor</include>
								<label>$INFO[ListItem.Label]                                                                    </label>
								<scroll>false</scroll>
								<visible> !Skin.HasSetting(no_cd_titles)</visible>
                            </control>
                        </control>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallmusicgrid),mid)" width="315" height="300">			<!-- Foco Tamaño medio -->	
					<control type="group">
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="115" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
                        <control type="group">					<!-- Grupo Sin CD -->  
                            <visible> Skin.HasSetting(no_cd_wall)</visible>
                            <control type="image">              <!-- Fondo Gris Sin CD -->
                                <left>-7</left>
                                <top>0</top>
                                <width>300</width>
                                <height>300</height>
                                <texture  background="true">thumb_cdcover_mask.png</texture>
                                <animation type="Focus" reversible="false">
                                    <effect type="zoom" center="auto" start="40" end="102" time="600" tween="back" easing="out" />
                                    <effect type="fade" start="0" end="55" time="400" />
                                </animation>
                                <aspectratio align="center">stretch</aspectratio>
                            </control>
                            <control type="image">              <!-- Imagen Sin CD -->
                                <left>-7</left>
                                <top>0</top>
                                <width>300</width>
                                <height>300</height>
                                <texture diffuse="thumb_box_diffuse.png" fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                                <aspectratio align="center">stretch</aspectratio>
                                <visible> Skin.HasSetting(no_cd_wall)</visible>
                            </control>
                        </control>
                        <control type="group">                   <!--Grupo de CD y imagenes-->
                            <visible> !Skin.HasSetting(no_cd_wall)</visible>
                            <control type="image">                        <!-- Caratula de CD-->
								<left>30</left>
								<top>15</top>
								<width>258</width>
								<height>254</height>
                                <texture fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                                <bordertexture border="-2">grey.png</bordertexture>
                                <aspectratio align="center">stretch</aspectratio>
                            </control>
                            <control type="image">                         <!-- Caja de CD -->
								<left>-10</left>
								<top>3</top>
								<width>310</width>
								<height>283</height> 
								<texture background="true">cd_box_closed-000.png</texture>
								<aspectratio align="center">stretch</aspectratio>
                            </control>
                            <control type="image">                        <!-- Fondo de etiqueta -->
								<left>2</left>
								<top>32</top>
								<width>31</width>
								<height>218</height>
								<texture background="true">cd_etykieta.png</texture>
								<aspectratio align="center">stretch</aspectratio>
                                <colordiffuse>$VAR[value_headercolor]</colordiffuse>
								<visible> !Skin.HasSetting(no_cd_titles)</visible>
                            </control>
                            <control type="label">                        <!-- Nombre del CD -->
								<left>0</left>
								<top>240</top>
								<width>205</width>
								<height>30</height>
								<font>Font_15</font>
								<angle>90</angle>
								<include>listcolor</include>
								<label>$INFO[ListItem.Label]                                                                    </label>
								<scroll>false</scroll>
								<visible> !Skin.HasSetting(no_cd_titles)</visible>
                            </control>
                         </control>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallmusicgrid),big)" width="470" height="470">		<!-- Foco tamaño Grande -->
					<control type="group">
					<control type="image">
                        <left>33</left>
                        <top>3</top>
                        <width>408</width>
                        <height>408</height>
                        <texture  background="true">thumb_cdcover_mask.png</texture>
                        <animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="40" end="112" time="600" tween="back" easing="out" />
							<effect type="fade" start="0" end="25" time="400" />
						</animation>
                        <aspectratio align="center">stretch</aspectratio>
                    </control>
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture diffuse="thumb_box_diffuse.png" fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
						<aspectratio align="center">stretch</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="70" end="110" time="400" tween="back" easing="out" />
							<effect type="fade" start="50" end="100" time="400" />
						</animation>
					</control>
						<visible> Skin.HasSetting(no_cd_wall)</visible>
					</control>
                    <control type="group">                    <!--Grupo de CD y imagenes-->
                         <visible> !Skin.HasSetting(no_cd_wall)</visible>
<!--					<control type="image">
                        <left>-10</left>
                        <top>-15</top>
                        <width>4</width>
                        <height>450</height>
                        <texture  background="true">thumb_cdcover_mask.png</texture>
                        <animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="40" end="100" time="600" tween="back" easing="out" />
							<effect type="fade" start="0" end="25" time="400" />
						</animation>
                        <aspectratio align="center">stretch</aspectratio>
                    </control>
-->						<control type="group">
						 <animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="70" end="110" time="400" tween="back" easing="out" />
							<effect type="fade" start="50" end="100" time="400" />
						</animation>

						 <control type="image">                        <!-- Caratula de CD-->
                            <left>37</left>
                            <top>8</top>
                            <width>380</width>
                            <height>400</height>
                            <texture fallback="DefaultAudioCover.png" background="true">$VAR[value_poster]</texture>
                            <aspectratio align="center">stretch</aspectratio>
                        </control>
                        <control type="image">                        <!-- Caja de CD -->
                            <left>-20</left>							
                            <top>-15</top>
                            <width>460</width>
                            <height>460</height>
                            <texture background="true">cd_box_closed-000.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
                         </control>
                        <control type="image">                        <!-- Fondo de etiqueta -->
<!--                            <left>9</left>-->
                            <left>4</left>
                            <top>35</top>
                            <width>30</width>
                            <height>347</height>
                            <texture background="true">cd_etykieta.png</texture>
                            <aspectratio align="center">stretch</aspectratio>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
                        </control>
                        <control type="label">                        <!-- Nombre del CD -->
<!--                            <left>6</left>-->
                            <left>0</left>
                            <top>370</top>
                            <width>330</width>
                            <height>30</height>
                            <font>Font_15</font>
                            <angle>90</angle>
                            <include>listcolor</include>
							<label>$INFO[ListItem.Label]                                                                    </label>
							<scroll>false</scroll>
							<visible> !Skin.HasSetting(no_cd_titles)</visible>
    					</control>
                    </control>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>


	<include name="ViewWallPrograms">
		<control type="group">
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>0</left>
				<top>150</top>
				<width>1928</width>
				<height>801</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol>-</pagecontrol>
				<visible>Window.IsActive(1)</visible>
				<itemlayout condition="String.Contains(skin.string(wallprogramsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>160</width>
						<height>160</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallprogramsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>273</width>
						<height>276</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallprogramsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>482</width>
						<height>414</height>
					</control>
				</itemlayout>
				<focusedlayout condition="String.Contains(skin.string(wallprogramsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallprogramsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallprogramsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>
	<include name="ViewWallPics">
		<control type="group">
			<include>ViewBack</include>
			<!-- Fundo -->
			<visible>Control.IsVisible(56)</visible>
			<control type="panel" id="56">
				<viewtype label="31805">Panel</viewtype>
				<left>0</left>
				<top>150</top>
				<width>1928</width>
				<height>801</height>
				<onleft>9900</onleft>
				<onup>9900</onup>
				<ondown>9920</ondown>
				<orientation>vertical</orientation>
				<pagecontrol>-</pagecontrol>
				<visible>Window.IsActive(2)</visible>
				<itemlayout condition="String.Contains(skin.string(wallpicsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>160</width>
						<height>160</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallpicsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>273</width>
						<height>276</height>
					</control>
				</itemlayout>
				<itemlayout condition="String.Contains(skin.string(wallpicsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">black.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
					</control>
					<control type="image">
						<include>Wall_ThumbDimmer</include>
						<width>482</width>
						<height>414</height>
					</control>
				</itemlayout>
				<focusedlayout condition="String.Contains(skin.string(wallpicsgrid),default)" width="160" height="160">
					<!-- tamanho normal -->
					<control type="image">
						<left>3</left>
						<top>3</top>
						<width>154</width>
						<height>154</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallpicsgrid),mid)" width="273" height="276">
					<!-- tamanho medio -->
					<control type="image">
						<left>8</left>
						<top>3</top>
						<width>262</width>
						<height>262</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
				<focusedlayout condition="String.Contains(skin.string(wallpicsgrid),big)" width="482" height="414">
					<!-- tamanho grande -->
					<control type="image">
						<left>33</left>
						<top>3</top>
						<width>408</width>
						<height>408</height>
						<texture fallback="DefaultAddon.png" background="true">$VAR[value_poster]</texture>
						<bordertexture border="-2">grey.png</bordertexture>
						<aspectratio align="center">keep</aspectratio>
						<animation type="Focus" reversible="false">
							<effect type="zoom" center="auto" start="80" end="100" time="400" tween="back" easing="out" />
							<effect type="fade" start="80" end="100" time="400" />
						</animation>
					</control>
				</focusedlayout>
			</control>
		</control>
	</include>
</includes>